@use '../../../../styles/variables';
@use '../../../../styles/mixins';

:host {
  --card-focused-background: #e8e8e85f;
  --card-focused-border: #e5e5e5;
  --link-hovered: #{variables.$clr-slate-gray};
  isolation: isolate;
}

.dark {
  :host {
    --card-focused-background: #{variables.$clr-gray-smooth-dark};
    --card-focused-border: #{variables.$clr-slate-gray};
    --link-hovered: #{variables.$clr-snow};
  }
}

.playlist-card {
  a {
    color: inherit;
    text-decoration: none;
  }

  padding: calc(variables.$spacing-sm / 2);
  border-radius: calc(variables.$radius-round / 2);
  transition:
    background-color 100ms ease-out,
    border-color 20ms ease-in;
  border: 1px solid transparent;

  &:focus-within {
    background-color: var(--card-focused-background);
    border-color: var(--card-focused-border);
  }

  .thumbnail-container {
    position: relative;
    cursor: pointer;

    .playlist-total-videos {
      position: absolute;
      right: variables.$spacing-sm;
      bottom: variables.$spacing-sm;
      background-color: rgba(variables.$clr-dark-void, 0.8);
      font-size: variables.$fs-xs;
      padding: 1px 4px;
      border-radius: 3px;
      font-weight: variables.$fw-semibold;
      color: variables.$clr-snow;
    }

    .playlist-thumbnail-icon {
      position: absolute;
      right: 50%;
      bottom: 50%;
      transform: translate(50%, 50%);
      background-color: rgba(variables.$clr-dark-void, 0.6);
      font-size: variables.$fs-xs;
      padding: 1px variables.$spacing-sm;
      border-radius: variables.$radius-round;
      font-weight: variables.$fw-semibold;
      color: variables.$clr-snow;
      @include mixins.flex-cv;

      > p {
        margin: 0;
      }
    }

    > .thumbnail {
      width: 100%;
      object-fit: cover;
      aspect-ratio: 16 / 9;
      margin-bottom: variables.$spacing-normal;
      border-radius: 12px;
    }

    &:not(:has(.skeleton))::before {
      background-color: rgba(variables.$clr-dusty-gray, 0.1);
      content: '';
      z-index: -1;
      transform: translateY(min(3%, 10px)) translateX(-50%);
      margin: auto;
      border-radius: inherit;
      position: absolute;
      left: 50%;
      bottom: 0;
      border-radius: calc(variables.$radius-round / 2);
      width: 95%;
      aspect-ratio: 16 / 9;
    }
  }
  > .playlist-card-info {
    display: grid;
    gap: calc(variables.$spacing-sm + 4px);
    grid-template-columns: 36px 1fr 36px;

    .playlist-card-img {
      flex-shrink: 0;
      width: 2.25rem;
      aspect-ratio: 1/1;

      a {
        border-radius: variables.$radius-rounded;
        > img {
          border-radius: inherit;
          width: 100%;
          height: 100%;
        }
      }
    }

    .playlist-title {
      font-weight: variables.$fw-semibold;
      line-height: 1.4;
      text-overflow: ellipsis;
      overflow: hidden;
      font-size: variables.$fs-sm;
      display: -webkit-box !important;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
    }

    .playlist-extra-info,
    .playlist-link {
      font-size: variables.$fs-xs;
      @include mixins.flex-cv;
      gap: variables.$spacing-sm;
      color: variables.$clr-dusty-gray;
      margin-top: calc(variables.$spacing-sm / 2);

      > :first-child {
        font-weight: variables.$fw-semibold;

        &:hover {
          color: var(--link-hovered);
        }
      }
    }

    .playlist-link {
      margin-top: variables.$spacing-sm;
      color: initial;
      &:hover {
        text-decoration: underline;
      }
    }

    .options-button {
      width: 34px;
      height: 34px;
      aspect-ratio: 1;
      color: inherit;
    }
  }
}
